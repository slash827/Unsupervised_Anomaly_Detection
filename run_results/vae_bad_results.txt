Original dataset shape: (1141078, 16)
Columns in the dataset: ['timestamp', 'processId', 'threadId', 'parentProcessId', 'userId', 'mountNamespace', 'processName', 'hostName', 'eventId', 'eventName', 'stackAddresses', 'argsNum', 'returnValue', 'args', 'sus', 'evil']

Class distribution:
Benign samples (evil=0, sus=0): 967564 (84.79%)
Suspicious samples (evil=0, sus=1): 15082 (1.32%)
Malicious samples (evil=1): 158432 (13.88%)

Creating binary features based on paper recommendations...

Feature value ranges before preprocessing:
isSystemProcess: Min=0, Max=1, Unique values=2
isSystemParentProcess: Min=0, Max=1, Unique values=2
isSystemUser: Min=0, Max=1, Unique values=2
isDefaultMountNamespace: Min=0, Max=1, Unique values=2
eventId: Min=2, Max=1010, Unique values=46
argsNum: Min=0, Max=5, Unique values=6
returnValueCat: Min=-1, Max=1, Unique values=3
Processed dataset shape: (1141078, 9)

Creating VAE with encoding dimension 8 and KL weight 0.5...

Training VAE on 774051 benign samples...
Fitting encoder...
Iteration 1, loss = 0.00673471
Iteration 2, loss = 0.00007757
Iteration 3, loss = 0.00006645
Iteration 4, loss = 0.00006265
Iteration 5, loss = 0.00005849
Iteration 6, loss = 0.00005665
Iteration 7, loss = 0.00005319
Iteration 8, loss = 0.00005462
Iteration 9, loss = 0.00004962
Iteration 10, loss = 0.00004997
Iteration 11, loss = 0.00004818
Iteration 12, loss = 0.00004753
Iteration 13, loss = 0.00004673
Training loss did not improve more than tol=0.000100 for 10 consecutive epochs. Stopping.
Fitting decoder...
Iteration 1, loss = 0.16950720
Iteration 2, loss = 0.13556706
Iteration 3, loss = 0.13385796
Iteration 4, loss = 0.13297712
Iteration 5, loss = 0.13241492
Iteration 6, loss = 0.13210028
Iteration 7, loss = 0.13183322
Iteration 8, loss = 0.13161033
Iteration 9, loss = 0.13150692
Iteration 10, loss = 0.13138693
Iteration 11, loss = 0.13060412
Iteration 12, loss = 0.12824300
Iteration 13, loss = 0.12805177
Iteration 14, loss = 0.12791691
Iteration 15, loss = 0.12777022
Iteration 16, loss = 0.12771317
Iteration 17, loss = 0.12769768
Iteration 18, loss = 0.12757528
Iteration 19, loss = 0.12757896
Iteration 20, loss = 0.12750163
Iteration 21, loss = 0.12742465
Iteration 22, loss = 0.12743775
Iteration 23, loss = 0.12733099
Iteration 24, loss = 0.12735950
Iteration 25, loss = 0.12729720
Iteration 26, loss = 0.12730687
Iteration 27, loss = 0.12718309
Iteration 28, loss = 0.12719002
Iteration 29, loss = 0.12714088
Iteration 30, loss = 0.12707873
Iteration 31, loss = 0.12711863
Iteration 32, loss = 0.12705704
Iteration 33, loss = 0.12704449
Iteration 34, loss = 0.12703254
Iteration 35, loss = 0.12701074
Iteration 36, loss = 0.12695658
Iteration 37, loss = 0.12696334
Iteration 38, loss = 0.12693389
Training loss did not improve more than tol=0.000100 for 10 consecutive epochs. Stopping.
Fine-tuning VAE...
Epoch 1, Train Loss: 9.464217, Recon Loss: 0.256461, KL Loss: 18.415512
Epoch 2, Train Loss: 9.463912, Recon Loss: 0.256156, KL Loss: 18.415512
Epoch 3, Train Loss: 9.463618, Recon Loss: 0.255862, KL Loss: 18.415512
Epoch 4, Train Loss: 9.463803, Recon Loss: 0.256046, KL Loss: 18.415512
Epoch 5, Train Loss: 9.463673, Recon Loss: 0.255917, KL Loss: 18.415512
Training completed in 442.29 seconds

Calculating metrics for all samples...
Traceback (most recent call last):
  File "c:\Users\gilad\Documents\GitHub\Unsupervised_Anomaly_Detection\variational_autoencoder.py", line 888, in <module>
    main()
  File "c:\Users\gilad\Documents\GitHub\Unsupervised_Anomaly_Detection\variational_autoencoder.py", line 859, in main
    vae, results_df, latent_df, training_history = train_vae(
                                                   ^^^^^^^^^^
  File "c:\Users\gilad\Documents\GitHub\Unsupervised_Anomaly_Detection\variational_autoencoder.py", line 294, in train_vae
    latent_df = pd.DataFrame(
                ^^^^^^^^^^^^^
  File "C:\Users\gilad\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\frame.py", line 782, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "C:\Users\gilad\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\internals\construction.py", line 336, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
                                                   ^^^^^^^^^^
  File "c:\Users\gilad\Documents\GitHub\Unsupervised_Anomaly_Detection\variational_autoencoder.py", line 294, in train_vae
    latent_df = pd.DataFrame(
                ^^^^^^^^^^^^^
  File "C:\Users\gilad\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\frame.py", line 782, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "C:\Users\gilad\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\internals\construction.py", line 336, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "c:\Users\gilad\Documents\GitHub\Unsupervised_Anomaly_Detection\variational_autoencoder.py", line 294, in train_vae
    latent_df = pd.DataFrame(
                ^^^^^^^^^^^^^
  File "C:\Users\gilad\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\frame.py", line 782, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "C:\Users\gilad\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\internals\construction.py", line 336, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "C:\Users\gilad\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\internals\construction.py", line 336, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
          ^^^^^^^^^^^^^^^
  File "C:\Users\gilad\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\internals\construction.py", line 336, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\gilad\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\internals\construction.py", line 336, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\gilad\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\internals\construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (1141078, 7), indices imply (1141078, 8)